description: HSC AP Pipeline with synthetic/fake sources. Templates are inputs.
# Remember:
# (0) Ensure median calibration products and template coadds exist for the data being processed
# (1) Execute `make_apdb.py`, e.g.,
#     make_apdb.py -c isolation_level=READ_UNCOMMITTED
#                  -c db_url="sqlite:////project/user/association.db"
# (2) Run this pipeline, setting appropriate diaPipe configs
#     (diaPipe configs must match the make_apdb.py configs)

instrument: lsst.obs.subaru.HyperSuprimeCam
imports:
  - location: $AP_PIPE_DIR/pipelines/_ingredients/ApPipeWithFakes.yaml
    exclude:  # These tasks frome from HSC's ApPipe.yaml instead
      - processCcd
  - location: $AP_PIPE_DIR/pipelines/HyperSuprimeCam/ApPipe.yaml
    exclude:  # These tasks come from ApPipeWithFakes.yaml instead
      - retrieveTemplate
      - subtractImages
      - detectAndMeasure
      - diaPipe
      - transformDiaSrcCat

tasks:
  processVisitFakes:
    class: lsst.pipe.tasks.processCcdWithFakes.ProcessCcdWithVariableFakesTask
    config:
      file: $AP_PIPE_DIR/config/HSC/processCcdWithFakes.py
      # Do not integrate file and pipeline configs until obs config files are
      # gone, to make it easier to check for changes on the obs side.
      # Config file wipes out all pre-existing configs, so copy base pipeline
      # config on top.
      connections.coaddName: parameters.coaddName
      insertFakes.doSubSelectSources: True
      insertFakes.select_col: 'isVisitSource'
      calibrate.photoCal.match.referenceSelection.magLimit.fluxField: i_flux
      calibrate.photoCal.match.referenceSelection.magLimit.maximum: 22.0
  diaPipe:
    class: lsst.ap.association.DiaPipelineTask
    config:
      # apdb.db_url: YOU MUST CONFIGURE THIS BEFORE RUNNING THE PIPELINE
