description: AP Pipeline with synthetic/fake sources. Templates are inputs.
# This pipeline is imported by camera-specific pipelines.
# You almost certainly want to run one of those, and not this one.

imports:
  - location: $AP_PIPE_DIR/pipelines/ApPipe.yaml

tasks:
  createFakes:
    class: lsst.ap.pipe.createApFakes.CreateRandomApFakesTask
    config:
      magMin: 20
      magMax: 26
      fraction: 0
      fakeDensity: 2000
  coaddFakes:
    class: lsst.pipe.tasks.insertFakes.InsertFakesTask
    config:
      connections.coaddName: goodSeeing
      doSubSelectSources: True
      select_col: 'isTemplateSource'
  processVisitFakes:
    class: lsst.pipe.tasks.processCcdWithFakes.ProcessCcdWithVariableFakesTask
    config:
      connections.coaddName: goodSeeing
      insertFakes.doSubSelectSources: True
      insertFakes.select_col: 'isVisitSource'
      calibrate.photoCal.match.referenceSelection.magLimit.fluxField: i_flux
      calibrate.photoCal.match.referenceSelection.magLimit.maximum: 22.0
  retrieveTemplate:  # New task added for multi-tract difference imaging
    class: lsst.ip.diffim.getTemplate.GetMultiTractCoaddTemplateTask
    config:
      connections.coaddExposures: goodSeeingCoadd
      connections.outputExposure: fakes_goodSeeingDiff_templateExp
  imageDifference:  # New task class for multi-tract difference imaging
    class: lsst.pipe.tasks.imageDifference.ImageDifferenceFromTemplateTask
    config:
      connections.fakesType: 'fakes_'
      connections.exposure: fakes_calexp
      connections.outputSchema: fakes_goodSeeingDiff_diaSrc_schema
      connections.subtractedExposure: fakes_goodSeeingDiff_differenceExp
      connections.scoreExposure: fakes_goodSeeingDiff_scoreExp
      connections.warpedExposure: fakes_goodSeeingDiff_warpedExp
      connections.matchedExposure: fakes_goodSeeingDiff_matchedExp
      connections.diaSources: fakes_goodSeeingDiff_diaSrc
      connections.inputTemplate: fakes_goodSeeingDiff_templateExp
      # The following are copied from ApPipe.yaml (imageDifference class changed)
      doWriteWarpedExp: True  # Required for packaging alerts in diaPipe
      doSkySources: True
      coaddName: goodSeeing
      getTemplate.coaddName: goodSeeing
      connections.coaddName: goodSeeing
  transformDiaSrcCat:
    class: lsst.ap.association.TransformDiaSourceCatalogTask
    config:
      connections.fakesType: 'fakes_'
      connections.diaSourceSchema: fakes_goodSeeingDiff_diaSrc_schema
      connections.diaSourceCat: fakes_goodSeeingDiff_diaSrc
      connections.diffIm: fakes_goodSeeingDiff_differenceExp
      connections.diaSourceTable: fakes_goodSeeingDiff_diaSrcTable
  diaPipe:
    class: lsst.ap.association.DiaPipelineTask
    config:
      doWriteAssociatedSources: True
      connections.fakesType: 'fakes_'
      connections.diaSourceTable: fakes_goodSeeingDiff_diaSrcTable
      connections.diffIm: fakes_goodSeeingDiff_differenceExp
      connections.warpedExposure: fakes_goodSeeingDiff_warpedExp
      connections.associatedDiaSources: fakes_goodSeeingDiff_assocDiaSrc
      # apdb.db_url: YOU MUST CONFIGURE THIS BEFORE RUNNING THE PIPELINE
  fakesMatch:
    class: lsst.pipe.tasks.matchFakes.MatchFakesTask
    config:
      connections.coaddName: goodSeeing
      matchDistanceArcseconds: 0.5

contracts:
  - createFakes.connections.fakesType == coaddFakes.connections.fakesType
  - createFakes.connections.fakesType == processVisitFakes.connections.fakesType
  - createFakes.connections.fakesType == imageDifference.connections.fakesType
  - createFakes.connections.fakesType == diaPipe.connections.fakesType
  - createFakes.connections.fakesType == fakesMatch.connections.fakesType
  - coaddFakes.connections.coaddName == processVisitFakes.connections.coaddName
  - coaddFakes.connections.coaddName == imageDifference.connections.coaddName
  - coaddFakes.connections.coaddName == diaPipe.connections.coaddName
  - coaddFakes.connections.coaddName == fakesMatch.connections.coaddName
  - retrieveTemplate.connections.outputExposure == imageDifference.connections.inputTemplate
