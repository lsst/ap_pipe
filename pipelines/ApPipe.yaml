description: End to end Alert Production pipeline
# Look in subdirectories of $AP_PIPE_DIR/pipelines to find customized pipelines
# for each camera. Those pipelines import this general AP pipeline.
#
# NOTES
# Remember to run make_apdb.py and use the same configs for diaPipe
# A db_url is always required, e.g.,
# -c diaPipe:apdb.db_url: 'sqlite:////project/user/association.db'
# Option to specify connection_timeout for sqlite APDBs encountering lock errors, i.e.,
# -c diaPipe:apdb.connection_timeout: 240

# WARNING: camera-specific pipelines importing this pipeline may
# blow away all the configs that are set in this file.
# To update a pipeline config prior to DM-35504, you MUST put it in either,
# e.g., $AP_PIPE_DIR/config/$CAMERA/someTask.py, or in a camera-specific,
# pipeline, e.g., $AP_PIPE_DIR/pipelines/$CAMERA/ApPipe.yaml.

imports:
  - location: $AP_PIPE_DIR/pipelines/ProcessCcd.yaml
parameters:
  # Pipeline configurable to run on both goodSeeing and deep templates, depending on dataset.
  coaddName: goodSeeing
tasks:
  retrieveTemplate:  # For multi-tract difference imaging
    class: lsst.ip.diffim.getTemplate.GetTemplateTask
    config:
      connections.coaddName: parameters.coaddName
  imageDifference:
    class: lsst.pipe.tasks.imageDifference.ImageDifferenceFromTemplateTask
    config:
      doWriteWarpedExp: True             # Required for packaging alerts in diaPipe
      doSkySources: True
      doApplyFinalizedPsf: False
      coaddName: parameters.coaddName  # Can be removed once ImageDifference no longer supports Gen 2
      connections.coaddName: parameters.coaddName
  transformDiaSrcCat:
    class: lsst.ap.association.TransformDiaSourceCatalogTask
    config:
      doRemoveSkySources: True
      connections.coaddName: parameters.coaddName
  diaPipe:
    class: lsst.ap.association.DiaPipelineTask
    config:
      connections.coaddName: parameters.coaddName
subsets:
  apPipe:
    subset:
      - isr
      - characterizeImage
      - calibrate
      - retrieveTemplate
      - imageDifference
      - transformDiaSrcCat
      - diaPipe
    description: >
      An alias of ApPipe to use in higher-level pipelines.
contracts:
  # DiaPipelineTask needs diaSource fluxes, catalogs, warped exposures, and difference exposures
  - imageDifference.doMeasurement is True
  - imageDifference.doWriteSources is True
  - imageDifference.doWriteWarpedExp is True
  - imageDifference.doWriteSubtractedExp is True
  - imageDifference.doSkySources == transformDiaSrcCat.doRemoveSkySources
  # Inputs and outputs must match
  # Use of ConnectionsClass for templated fields is a workaround for DM-30210
  - retrieveTemplate.connections.ConnectionsClass(config=retrieveTemplate).outputExposure.name ==
      imageDifference.connections.ConnectionsClass(config=imageDifference).inputTemplate.name
  - imageDifference.connections.ConnectionsClass(config=imageDifference).subtractedExposure.name ==
      transformDiaSrcCat.connections.ConnectionsClass(config=transformDiaSrcCat).diffIm.name
  - imageDifference.connections.ConnectionsClass(config=imageDifference).diaSources.name ==
      transformDiaSrcCat.connections.ConnectionsClass(config=transformDiaSrcCat).diaSourceCat.name
  - imageDifference.connections.ConnectionsClass(config=imageDifference).subtractedExposure.name ==
        diaPipe.connections.ConnectionsClass(config=diaPipe).diffIm.name
  - imageDifference.connections.ConnectionsClass(config=imageDifference).inputTemplate.name ==
        diaPipe.connections.ConnectionsClass(config=diaPipe).template.name
  - imageDifference.connections.ConnectionsClass(config=imageDifference).exposure.name ==
      diaPipe.connections.ConnectionsClass(config=diaPipe).exposure.name
  - transformDiaSrcCat.connections.ConnectionsClass(config=transformDiaSrcCat).diaSourceTable.name ==
        diaPipe.connections.ConnectionsClass(config=diaPipe).diaSourceTable.name
