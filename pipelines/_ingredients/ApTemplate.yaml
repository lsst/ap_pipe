description: The AP template building pipeline
# Look in subdirectories of $AP_PIPE_DIR/pipelines to find customized pipelines
# for each camera. Those pipelines import this general template-building pipeline.

# WARNING: some camera-specific pipelines importing this pipeline presently
# blow away all the configs that are set in this file.
# To update a pipeline config prior to DM-35504, you MUST put it in either,
# e.g., $AP_PIPE_DIR/config/$CAMERA/someTask.py, or in a camera-specific,
# pipeline, e.g., $AP_PIPE_DIR/pipelines/$CAMERA/ApTemplate.yaml.

imports:
  - location: $AP_PIPE_DIR/pipelines/_ingredients/ProcessCcd.yaml
parameters:
  coaddName: goodSeeing
tasks:
  consolidateVisitSummary:
    class: lsst.pipe.tasks.postprocess.ConsolidateVisitSummaryTask
    config:
      connections.calexp: "{calexpType}calexp"
      connections.visitSummary: "{calexpType}visitSummary"
      connections.visitSummarySchema: "{calexpType}visitSummary_schema"
  selectGoodSeeingVisits:
    class: lsst.pipe.tasks.selectImages.BestSeeingQuantileSelectVisitsTask
    config:
      connections.coaddName: parameters.coaddName
      connections.visitSummaries: "{calexpType}visitSummary"
  makeWarp:
    class: lsst.pipe.tasks.makeWarp.MakeWarpTask
    config:
      # The upstream default is now finalVisitSummary, which doesn't exist
      # in this pipeline since there's nothing to update relative to the
      # original visitSummary.
      connections.visitSummary: "{calexpType}visitSummary"
      # The original visitSummary also doesn't have PSFs, so use the calexp
      # PSFs (and ApCorrMaps).
      useVisitSummaryPsf: False
      doWriteEmptyWarps: True
      makePsfMatched: True
  assembleCoadd:
    class: lsst.pipe.tasks.assembleCoadd.CompareWarpAssembleCoaddTask
    config:
      doSelectVisits: True
      doNImage: True
      assembleStaticSkyModel.doSelectVisits: True
      connections.outputCoaddName: parameters.coaddName

subsets:
  singleFrameAp:
    subset:
      - isr
      # TODO DM-40389: replace these with calibrateImage
      - characterizeImage
      - calibrate
      - consolidateVisitSummary
    description: >
      Tasks to run for single frame processing that are necessary to use the good
      seeing selector to build coadds for use as difference imaging templates.
  makeTemplate:
    subset:
      - selectGoodSeeingVisits
      - makeWarp
      - assembleCoadd
    description: >
      Tasks to run once calexps and visit summaries exist to build good seeing
      coadds for use as templates.

contracts:
  - makeWarp.makeDirect is True
  - makeWarp.makePsfMatched is True
  # Inputs and outputs must match. For consistency, contracts are written in execution order:
  #     first task == second task, then sorted by (first, second)
  # Use of ConnectionsClass for templated fields is a workaround for DM-30210
  - contract: calibrate.connections.outputExposure ==
              consolidateVisitSummary.connections.ConnectionsClass(config=consolidateVisitSummary).calexp.name
    msg: "calibrate.outputExposure != consolidateVisitSummary.calexp"
  - contract: calibrate.connections.outputExposure ==
              makeWarp.connections.ConnectionsClass(config=makeWarp).calExpList.name
    msg: "calibrate.outputExposure != makeWarp.calExpList"
  - contract: consolidateVisitSummary.connections.ConnectionsClass(config=consolidateVisitSummary).visitSummary.name ==
              selectGoodSeeingVisits.connections.ConnectionsClass(config=selectGoodSeeingVisits).visitSummaries.name
    msg: "consolidateVisitSummary.visitSummary != selectGoodSeeingVisits.visitSummaries"
  - contract: consolidateVisitSummary.connections.ConnectionsClass(config=consolidateVisitSummary).visitSummary.name ==
              makeWarp.connections.ConnectionsClass(config=makeWarp).visitSummary.name
    msg: "consolidateVisitSummary.visitSummary != makeWarp.visitSummary"
  - contract: selectGoodSeeingVisits.connections.ConnectionsClass(config=selectGoodSeeingVisits).goodVisits.name ==
              assembleCoadd.connections.ConnectionsClass(config=assembleCoadd).selectedVisits.name
    msg: "selectGoodSeeingVisits.goodVisits != assembleCoadd.selectedVisits"
  - contract: makeWarp.connections.ConnectionsClass(config=makeWarp).psfMatched.name ==
              assembleCoadd.connections.ConnectionsClass(config=assembleCoadd).psfMatchedWarps.name
    msg: "makeWarp.psfMatched != assembleCoadd.psfMatchedWarps"
