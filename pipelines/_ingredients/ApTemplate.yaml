description: The AP template building pipeline
# Look in subdirectories of $AP_PIPE_DIR/pipelines to find customized pipelines
# for each camera. Those pipelines import this general template-building pipeline.

# WARNING: some camera-specific pipelines importing this pipeline presently
# blow away all the configs that are set in this file.
# To update a pipeline config prior to DM-35504, you MUST put it in either,
# e.g., $AP_PIPE_DIR/config/$CAMERA/someTask.py, or in a camera-specific,
# pipeline, e.g., $AP_PIPE_DIR/pipelines/$CAMERA/ApTemplate.yaml.

imports:
  - location: $AP_PIPE_DIR/pipelines/_ingredients/ApPipe.yaml
    include:
    - apPipeSingleFrame
tasks:
  consolidateVisitSummary:
    class: lsst.pipe.tasks.postprocess.ConsolidateVisitSummaryTask
    config:
      # Inputs
      connections.calexp: preliminary_visit_image
      # Outputs
      connections.visitSummary: preliminary_visit_summary
      connections.visitSummarySchema: preliminary_visit_summary_schema
  selectGoodSeeingVisits:
    class: lsst.pipe.tasks.selectImages.BestSeeingQuantileSelectVisitsTask
    config:
      # Inputs
      connections.visitSummaries: preliminary_visit_summary
      # Outputs
      connections.goodVisits: template_coadd_visit_selection
  makeWarp:
    class: lsst.drp.tasks.make_direct_warp.MakeDirectWarpTask
    config:
      # The upstream default is now finalVisitSummary, which doesn't exist
      # in this pipeline since there's nothing to update relative to the
      # original visitSummary.
      # connections.visitSummary: "visitSummary"
      # The original visitSummary also doesn't have PSFs, so use the calexp
      # PSFs (and ApCorrMaps).
      useVisitSummaryPsf: False
      doRevertOldBackground: False
      doApplyNewBackground: False
      doApplyFlatBackgroundRatio: False
      doWarpMaskedFraction: False
      # Inputs
      connections.calexp_list: preliminary_visit_image
      connections.visit_summary: preliminary_visit_summary
      # Outputs
      connections.warp: direct_warp
  assembleCoadd:
    class: lsst.drp.tasks.assemble_coadd.CompareWarpAssembleCoaddTask
    config:
      doSelectVisits: True
      doNImage: True
      doMaskBrightObjects: False
      doInputMap: False
      doWriteArtifactMasks: False
      assembleStaticSkyModel.doSelectVisits: True
      # Inputs
      connections.selectedVisits: template_coadd_visit_selection
      connections.inputWarps: direct_warp
      # Outputs
      connections.coaddExposure: template_coadd
      connections.nImage: template_coadd_n_image
subsets:
  processCcd:  # TODO: remove on DM-48428
    subset:
      - isr
      - calibrateImage
      - analyzePreliminarySummaryStats
    description: Deprecated alias for apPipeSingleFrame, will be removed after v29.
  apPipeSingleFrame:
    subset:
      - isr
      - calibrateImage
      - consolidateVisitSummary
    description: >
      Tasks to run for single frame processing that are necessary to use the good
      seeing selector to build coadds for use as difference imaging templates.
  makeTemplate:
    subset:
      - selectGoodSeeingVisits
      - makeWarp
      - assembleCoadd
    description: >
      Tasks to run once calexps and visit summaries exist to build good seeing
      coadds for use as templates.

contracts:
  # Inputs and outputs must match. For consistency, contracts are written in execution order:
  #     first task == second task, then sorted by (first, second)
  # Use of ConnectionsClass for templated fields is a workaround for DM-30210
  - contract: calibrateImage.connections.exposure ==
              consolidateVisitSummary.connections.ConnectionsClass(config=consolidateVisitSummary).calexp.name
    msg: "calibrateImage.exposure != consolidateVisitSummary.calexp"
  - contract: calibrateImage.connections.exposure ==
              makeWarp.connections.ConnectionsClass(config=makeWarp).calexp_list.name
    msg: "calibrateImage.exposure != makeWarp.calexp_list"
  - contract: consolidateVisitSummary.connections.ConnectionsClass(config=consolidateVisitSummary).visitSummary.name ==
              selectGoodSeeingVisits.connections.ConnectionsClass(config=selectGoodSeeingVisits).visitSummaries.name
    msg: "consolidateVisitSummary.visitSummary != selectGoodSeeingVisits.visitSummaries"
  - contract: consolidateVisitSummary.connections.ConnectionsClass(config=consolidateVisitSummary).visitSummary.name ==
              makeWarp.connections.ConnectionsClass(config=makeWarp).visit_summary.name
    msg: "consolidateVisitSummary.visitSummary != makeWarp.visit_summary"
  - contract: selectGoodSeeingVisits.connections.ConnectionsClass(config=selectGoodSeeingVisits).goodVisits.name ==
              assembleCoadd.connections.ConnectionsClass(config=assembleCoadd).selectedVisits.name
    msg: "selectGoodSeeingVisits.goodVisits != assembleCoadd.selectedVisits"
