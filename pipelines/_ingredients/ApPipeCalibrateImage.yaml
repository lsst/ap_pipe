# TODO DM-40388: This file will replace ApPipe.yaml, once the new pipeline is vetted.
description: End to end Alert Production pipeline.
# Look in subdirectories of $AP_PIPE_DIR/pipelines to find customized pipelines
# for each camera. Those pipelines import this general AP pipeline.
#
# NOTES
# Remember to run make_apdb.py and use the same configs for diaPipe
# A db_url is always required, e.g.,
# -c diaPipe:apdb.db_url: 'sqlite:////project/user/association.db'
# Option to specify connection_timeout for sqlite APDBs encountering lock errors, i.e.,
# -c diaPipe:apdb.connection_timeout: 240

# WARNING: camera-specific pipelines importing this pipeline may
# blow away all the configs that are set in this file.
# To update a pipeline config prior to DM-35504, you MUST put it in either,
# e.g., $AP_PIPE_DIR/config/$CAMERA/someTask.py, or in a camera-specific,
# pipeline, e.g., $AP_PIPE_DIR/pipelines/$CAMERA/ApPipeCalibrateImage.yaml.

imports:
  - location: $AP_PIPE_DIR/pipelines/_ingredients/ProcessCcdCalibrateImage.yaml
parameters:
  # Pipeline configurable to run on both goodSeeing and deep templates, depending on dataset.
  coaddName: goodSeeing
tasks:
  retrieveTemplate:
    class: lsst.ip.diffim.getTemplate.GetTemplateTask
    config:
      connections.bbox: initial_pvi.bbox
      connections.wcs: initial_pvi.wcs
      connections.coaddName: parameters.coaddName
  subtractImages:
    class: lsst.ip.diffim.subtractImages.AlardLuptonSubtractTask
    config:
      connections.science: initial_pvi
      connections.sources: initial_stars_footprints_detector
      connections.coaddName: parameters.coaddName
      doApplyExternalCalibrations: False
  detectAndMeasure:
    class: lsst.ip.diffim.detectAndMeasure.DetectAndMeasureTask
    config:
      connections.science: initial_pvi
      connections.coaddName: parameters.coaddName
      doSkySources: True
  rbClassify:
    class: lsst.meas.transiNet.RBTransiNetTask
    config:
      modelPackageStorageMode: butler
      connections.science: initial_pvi
      connections.coaddName: parameters.coaddName
  transformDiaSrcCat:
    class: lsst.ap.association.TransformDiaSourceCatalogTask
    config:
      doRemoveSkySources: True
      connections.coaddName: parameters.coaddName
      doIncludeReliability: True  # Output from rbClassify
  diaPipe:
    class: lsst.ap.association.DiaPipelineTask
    config:
      connections.exposure: initial_pvi
      connections.coaddName: parameters.coaddName
subsets:
  apPipe:
    subset:
      - isr
      - calibrateImage
      - retrieveTemplate
      - subtractImages
      - detectAndMeasure
      - rbClassify
      - transformDiaSrcCat
      - diaPipe
    description: >
      An alias of ApPipe to use in higher-level pipelines.
contracts:
  - detectAndMeasure.doSkySources == transformDiaSrcCat.doRemoveSkySources
  # Inputs and outputs must match. For consistency, contracts are written in execution order:
  #     first task == second task, then sorted by (first, second)
  # Use of ConnectionsClass for templated fields is a workaround for DM-30210
  - calibrateImage.connections.ConnectionsClass(config=calibrateImage).output_exposure.name ==
      subtractImages.connections.ConnectionsClass(config=subtractImages).science.name
  - calibrateImage.connections.ConnectionsClass(config=calibrateImage).stars.name ==
      subtractImages.connections.ConnectionsClass(config=subtractImages).sources.name
  - calibrateImage.connections.ConnectionsClass(config=calibrateImage).output_exposure.name ==
      rbClassify.connections.ConnectionsClass(config=rbClassify).science.name
  - retrieveTemplate.connections.ConnectionsClass(config=retrieveTemplate).template.name ==
      subtractImages.connections.ConnectionsClass(config=subtractImages).template.name
  - subtractImages.connections.ConnectionsClass(config=subtractImages).difference.name ==
      detectAndMeasure.connections.ConnectionsClass(config=detectAndMeasure).difference.name
  - subtractImages.connections.ConnectionsClass(config=subtractImages).science.name ==
      detectAndMeasure.connections.ConnectionsClass(config=detectAndMeasure).science.name
  - subtractImages.connections.ConnectionsClass(config=subtractImages).template.name ==
      diaPipe.connections.ConnectionsClass(config=diaPipe).template.name
  - subtractImages.connections.ConnectionsClass(config=subtractImages).science.name ==
      diaPipe.connections.ConnectionsClass(config=diaPipe).exposure.name
  - detectAndMeasure.connections.ConnectionsClass(config=detectAndMeasure).subtractedMeasuredExposure.name ==
      rbClassify.connections.ConnectionsClass(config=rbClassify).difference.name
  - detectAndMeasure.connections.ConnectionsClass(config=detectAndMeasure).diaSources.name ==
      rbClassify.connections.ConnectionsClass(config=rbClassify).diaSources.name
  - detectAndMeasure.connections.ConnectionsClass(config=detectAndMeasure).subtractedMeasuredExposure.name ==
      transformDiaSrcCat.connections.ConnectionsClass(config=transformDiaSrcCat).diffIm.name
  - detectAndMeasure.connections.ConnectionsClass(config=detectAndMeasure).diaSources.name ==
      transformDiaSrcCat.connections.ConnectionsClass(config=transformDiaSrcCat).diaSourceCat.name
  - detectAndMeasure.connections.ConnectionsClass(config=detectAndMeasure).subtractedMeasuredExposure.name ==
        diaPipe.connections.ConnectionsClass(config=diaPipe).diffIm.name
  - (not transformDiaSrcCat.doIncludeReliability) or
        (rbClassify.connections.ConnectionsClass(config=rbClassify).classifications.name ==
            transformDiaSrcCat.connections.ConnectionsClass(config=transformDiaSrcCat).reliability.name)
  - transformDiaSrcCat.connections.ConnectionsClass(config=transformDiaSrcCat).diaSourceTable.name ==
        diaPipe.connections.ConnectionsClass(config=diaPipe).diaSourceTable.name
