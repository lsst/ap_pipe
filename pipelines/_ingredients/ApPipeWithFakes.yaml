description: AP Pipeline with synthetic/fake sources. Templates are inputs.
# This pipeline is imported by camera-specific pipelines.
# You almost certainly want to run one of those, and not this one.

# Per RFC-997, all variants of ApPipe must define three mutually exclusive subsets:
# - preload is tasks that can be run before raw images arrive
# - prompt is everything done by Prompt Processing starting from raws
# - afterburner is metrics and other non-essential tasks that are skipped by Prompt Processing

imports:
  - location: $ANALYSIS_TOOLS_DIR/pipelines/apDetectorVisitFakesCore.yaml
  - location: $AP_PIPE_DIR/pipelines/_ingredients/ApPipe.yaml

parameters:
  coaddName: goodSeeing
  # APDB config file must be user-specified
  apdb_config:
  fakesType: 'fakes_'
  injected_prefix: 'fakes_'
  injection_prefix: 'injection_'

tasks:
  inject_visit:
    class: lsst.source.injection.inject_visit.VisitInjectTask
    config:
      connections.input_exposure: preliminary_visit_image
      connections.output_exposure: fakes_preliminary_visit_image
      connections.output_catalog: fakes_preliminary_visit_image_catalog
      connections.injection_prefix: parameters.injection_prefix
      connections.injected_prefix: parameters.injected_prefix
      external_psf: false
      external_photo_calib: false
      external_wcs: false
  injectedMatchDiaSrc:
    class: lsst.ap.pipe.matchSourceInjected.MatchInjectedToDiaSourceTask
    config:
      connections.coaddName: parameters.coaddName
      connections.fakesType: parameters.fakesType
      connections.matchDiaSources: "{fakesType}{coaddName}Diff_matchDiaSrc"
      connections.injectedCat: fakes_preliminary_visit_image_catalog
      connections.diffIm: "{fakesType}difference_image"
      connections.diaSources: "{fakesType}dia_source_unfiltered"
      matchDistanceArcseconds: 0.5
      trimBuffer: 50
  injectedMatchAssocDiaSrc:
    class: lsst.ap.pipe.matchSourceInjected.MatchInjectedToAssocDiaSourceTask
    config:
      connections.coaddName: parameters.coaddName
      connections.fakesType: parameters.fakesType
      connections.assocDiaSources: "{fakesType}dia_source_apdb"
      connections.matchDiaSources: "{fakesType}{coaddName}Diff_matchDiaSrc"
      connections.matchAssocDiaSources: "{fakesType}{coaddName}Diff_matchAssocDiaSrc"
  consolidateMatchDiaSrc:
    class: lsst.pipe.tasks.postprocess.ConsolidateSourceTableTask
    config:
      # Task doesn't support coaddName, so coopt catalogType instead.
      connections.catalogType: parameters.coaddName
      connections.inputCatalogs: "fakes_{catalogType}Diff_matchDiaSrc"
      connections.outputCatalog: "fakes_{catalogType}Diff_matchDiaSourceTable"
  consolidateMatchAssocDiaSrc:
    class: lsst.pipe.tasks.postprocess.ConsolidateSourceTableTask
    config:
      # Task doesn't support coaddName, so coopt catalogType instead.
      connections.catalogType: parameters.coaddName
      connections.inputCatalogs: "fakes_{catalogType}Diff_matchAssocDiaSrc"
      connections.outputCatalog: "fakes_{catalogType}Diff_matchAssocDiaSourceTable"
subsets:
  apPipeSingleFrame:
    subset:
      - isr
      - calibrateImage
      - analyzePreliminarySummaryStats
    description: >-
      The prompt ApPipe tasks that make up single-frame processing. Not to be confused with the
      SingleFrame.yaml pipeline, which does more than just ApPipe single frame processing, and
      is designed as a standalone alternative to ApPipeWithFakes.yaml.
  processCcd:  # TODO: remove on DM-48428
    subset:
      - isr
      - calibrateImage
      - analyzePreliminarySummaryStats
    description: Deprecated alias for apPipeSingleFrame, will be removed after v29.
  apPipe:
    subset:
      - isr
      - calibrateImage
      - inject_visit
      - loadDiaCatalogs
      - rewarpTemplate
      - subtractImages
      - detectAndMeasureDiaSource
      - filterDiaSource
      - computeReliability
      - standardizeDiaSource
      - getRegionTimeFromVisit
      - mpSkyEphemerisQuery
      - associateApdb
      - injectedMatchDiaSrc
      - injectedMatchAssocDiaSrc
      - consolidateMatchDiaSrc
      - consolidateMatchAssocDiaSrc
      - makeSampledImageSubtractionMetrics
      - analyzeAssociatedDiaSourceTable
      - analyzeTrailedDiaSourceTable
      - analyzeDiaFakesDetectorVisitCore
      - analyzeAssocDiaFakesDetectorVisitCore
      - analyzeDiaFakesVisitCore
      - analyzeAssocDiaFakesVisitCore
      - analyzeImageDifferenceMetrics
      - analyzeDiaSourceDetectionMetrics
      - analyzeLoadDiaCatalogsMetrics
      - analyzeDiaSourceAssociationMetrics
      - analyzeAssociateDiaSourceTiming
      - analyzeSampledImageSubtractionMetrics
      - analyzePreliminarySummaryStats
    description: >
      An alias of ApPipe to use in higher-level pipelines.
  preload:
    subset:
      - loadDiaCatalogs
      - analyzeLoadDiaCatalogsMetrics
      - mpSkyEphemerisQuery
    description: Tasks that can be run before receiving raw images.
  prompt:
    subset:
      - isr
      - calibrateImage
      - inject_visit
      - rewarpTemplate
      - subtractImages
      - detectAndMeasureDiaSource
      - filterDiaSource
      - computeReliability
      - standardizeDiaSource
      - associateApdb
      - injectedMatchDiaSrc
      - injectedMatchAssocDiaSrc
      - consolidateMatchDiaSrc
      - consolidateMatchAssocDiaSrc
      - analyzeAssociatedDiaSourceTable
      - analyzeTrailedDiaSourceTable
      - analyzeImageDifferenceMetrics
      - analyzeDiaSourceDetectionMetrics
      - analyzeDiaSourceAssociationMetrics
      - analyzeAssociateDiaSourceTiming
      - analyzePreliminarySummaryStats
    description: >
      Tasks necessary to turn raw images into APDB rows and alerts.
      Requires preload subset to be run first.
  afterburner:
    subset:
      - makeSampledImageSubtractionMetrics
      - analyzeSampledImageSubtractionMetrics
      - analyzeDiaFakesDetectorVisitCore
      - analyzeAssocDiaFakesDetectorVisitCore
      - analyzeDiaFakesVisitCore
      - analyzeAssocDiaFakesVisitCore
    description: >
      Tasks for QA and other non-real-time processing.
      Requires prompt subset to be run first.
  injected_apPipeSingleFrame:
    subset:
    - inject_visit
    description: >-
      All tasks from the 'apPipeSingleFrame' subset impacted by source injection.
  injected_processCcd:
    subset:
    - inject_visit
    description: >
      Deprecated alias for injected_apPipeSingleFrame, will be removed after v29.
  injected_apPipe:
    subset:
    - inject_visit
    - subtractImages
    - detectAndMeasureDiaSource
    - standardizeDiaSource
    - computeReliability
    - associateApdb
    - injectedMatchDiaSrc
    - injectedMatchAssocDiaSrc
    - consolidateMatchDiaSrc
    - consolidateMatchAssocDiaSrc
    - analyzeDiaFakesDetectorVisitCore
    - analyzeAssocDiaFakesDetectorVisitCore
    - analyzeDiaFakesVisitCore
    - analyzeAssocDiaFakesVisitCore
    description: >
      All tasks from the 'apPipe' subset impacted by source injection.
contracts:
  - contract: detectAndMeasureDiaSource.doSkySources == standardizeDiaSource.doRemoveSkySources
  # to reduce latency, we need two calls to the sattle service when active
  - calibrateImage.run_sattle == detectAndMeasureDiaSource.run_sattle
  # Both loadDiaCatalogs and associateApdb connect to the APDB, so make sure they use the same configuration
  - loadDiaCatalogs.apdb_config_url == associateApdb.apdb_config_url
  # Inputs and outputs must match. For consistency, contracts are written in execution order:
  #     first task == second task, then sorted by (first, second)
  # Use of ConnectionsClass for templated fields is a workaround for DM-30210
  - contract: rewarpTemplate.connections.ConnectionsClass(config=rewarpTemplate).template.name ==
              subtractImages.connections.ConnectionsClass(config=subtractImages).template.name
    msg: "rewarpTemplate.template != subtractImages.template"
  - contract: rewarpTemplate.connections.ConnectionsClass(config=rewarpTemplate).template.name ==
              makeSampledImageSubtractionMetrics.connections.ConnectionsClass(config=makeSampledImageSubtractionMetrics).template.name
    msg: "rewarpTemplate.template != makeSampledImageSubtractionMetrics.template"
  - contract: subtractImages.connections.ConnectionsClass(config=subtractImages).difference.name ==
              detectAndMeasureDiaSource.connections.ConnectionsClass(config=detectAndMeasureDiaSource).difference.name
    msg: "subtractImages.difference != detectAndMeasureDiaSource.difference"
  - contract: subtractImages.connections.ConnectionsClass(config=subtractImages).science.name ==
              detectAndMeasureDiaSource.connections.ConnectionsClass(config=detectAndMeasureDiaSource).science.name
    msg: "subtractImages.science != detectAndMeasureDiaSource.science"
  - contract: subtractImages.connections.ConnectionsClass(config=subtractImages).template.name ==
              associateApdb.connections.ConnectionsClass(config=associateApdb).template.name
    msg: "subtractImages.template != associateApdb.template"
  - contract: subtractImages.connections.ConnectionsClass(config=subtractImages).science.name ==
              associateApdb.connections.ConnectionsClass(config=associateApdb).exposure.name
    msg: "subtractImages.science != associateApdb.exposure"
  - contract: subtractImages.connections.ConnectionsClass(config=subtractImages).matchedTemplate.name ==
              makeSampledImageSubtractionMetrics.connections.ConnectionsClass(config=makeSampledImageSubtractionMetrics).matchedTemplate.name
    msg: "subtractImages.matchedTemplate != makeSampledImageSubtractionMetrics.matchedTemplate"
  - contract: detectAndMeasureDiaSource.connections.ConnectionsClass(config=detectAndMeasureDiaSource).diaSources.name ==
              filterDiaSource.connections.ConnectionsClass(config=filterDiaSource).diaSourceCat.name
    msg: "detectAndMeasureDiaSource.diaSources != filterDiaSource.diaSourceCat"
  - contract: detectAndMeasureDiaSource.connections.ConnectionsClass(config=detectAndMeasureDiaSource).subtractedMeasuredExposure.name ==
              computeReliability.connections.ConnectionsClass(config=computeReliability).difference.name
    msg: "detectAndMeasureDiaSource.subtractedMeasuredExposure != computeReliability.difference"
  - contract: detectAndMeasureDiaSource.connections.ConnectionsClass(config=detectAndMeasureDiaSource).subtractedMeasuredExposure.name ==
              standardizeDiaSource.connections.ConnectionsClass(config=standardizeDiaSource).diffIm.name
    msg: "detectAndMeasureDiaSource.subtractedMeasuredExposure != standardizeDiaSource.diffIm"
  - contract: detectAndMeasureDiaSource.connections.ConnectionsClass(config=detectAndMeasureDiaSource).subtractedMeasuredExposure.name ==
              associateApdb.connections.ConnectionsClass(config=associateApdb).diffIm.name
    msg: "detectAndMeasureDiaSource.subtractedMeasuredExposure != associateApdb.diffIm"
  - contract: detectAndMeasureDiaSource.connections.ConnectionsClass(config=detectAndMeasureDiaSource).subtractedMeasuredExposure.name ==
              makeSampledImageSubtractionMetrics.connections.ConnectionsClass(config=makeSampledImageSubtractionMetrics).difference.name
    msg: "detectAndMeasureDiaSource.subtractedMeasuredExposure != makeSampledImageSubtractionMetrics.difference"
  - contract: filterDiaSource.connections.ConnectionsClass(config=filterDiaSource).filteredDiaSourceCat.name ==
              computeReliability.connections.ConnectionsClass(config=computeReliability).diaSources.name
    msg: "filterDiaSource.filteredDiaSourceCat != computeReliability.diaSources"
  - contract: filterDiaSource.connections.ConnectionsClass(config=filterDiaSource).filteredDiaSourceCat.name ==
              standardizeDiaSource.connections.ConnectionsClass(config=standardizeDiaSource).diaSourceCat.name
    msg: "filterDiaSource.filteredDiaSourceCat != standardizeDiaSource.diaSourceCat"
  - contract: filterDiaSource.connections.ConnectionsClass(config=filterDiaSource).filteredDiaSourceCat.name ==
              makeSampledImageSubtractionMetrics.connections.ConnectionsClass(config=makeSampledImageSubtractionMetrics).diaSources.name
    msg: "filterDiaSource.filteredDiaSourceCat != makeSampledImageSubtractionMetrics.diaSources"
  - contract: (not standardizeDiaSource.doIncludeReliability) or
              (computeReliability.connections.ConnectionsClass(config=computeReliability).classifications.name ==
               standardizeDiaSource.connections.ConnectionsClass(config=standardizeDiaSource).reliability.name)
    msg: "computeReliability.classifications != standardizeDiaSource.reliability"
  - contract: standardizeDiaSource.connections.ConnectionsClass(config=standardizeDiaSource).diaSourceTable.name ==
              associateApdb.connections.ConnectionsClass(config=associateApdb).diaSourceTable.name
    msg: "standardizeDiaSource.diaSourceTable != associateApdb.diaSourceTable"
  - contract: calibrateImage.connections.ConnectionsClass(config=calibrateImage).stars_footprints.name ==
              getRegionTimeFromVisit.connections.ConnectionsClass(config=getRegionTimeFromVisit).dummy_visit.name
    msg: "calibrateImage.stars_footprints != getRegionTimeFromVisit.dummy_visit"
  - contract: getRegionTimeFromVisit.connections.ConnectionsClass(config=getRegionTimeFromVisit).output.name ==
              mpSkyEphemerisQuery.connections.ConnectionsClass(config=mpSkyEphemerisQuery).predictedRegionTime.name
    msg: "mpSkyEphemerisQuery.predictedRegionTime != getRegionTimeFromVisit.output"
  - contract: (not associateApdb.doSolarSystemAssociation) or
              (mpSkyEphemerisQuery.connections.ConnectionsClass(config=mpSkyEphemerisQuery).ssObjects.name ==
              associateApdb.connections.ConnectionsClass(config=associateApdb).solarSystemObjectTable.name)
    msg: "mpSkyEphemerisQuery.ssObjects != associateApdb.solarSystemObjectTable"
  - contract: associateApdb.connections.ConnectionsClass(config=associateApdb).associatedDiaSources.name ==
              analyzeAssociatedDiaSourceTable.connections.ConnectionsClass(config=analyzeAssociatedDiaSourceTable).data.name
    msg: "associateApdb.associatedDiaSources != analyzeAssociatedDiaSourceTable.data"
  - contract: filterDiaSource.connections.ConnectionsClass(config=filterDiaSource).longTrailedSources.name ==
              analyzeTrailedDiaSourceTable.connections.ConnectionsClass(config=analyzeTrailedDiaSourceTable).data.name
    msg: "associateApdb.longTrailedSources != analyzeTrailedDiaSourceTable.data"
  - contract: makeSampledImageSubtractionMetrics.connections.ConnectionsClass(config=makeSampledImageSubtractionMetrics).spatiallySampledMetrics.name ==
              analyzeSampledImageSubtractionMetrics.connections.ConnectionsClass(config=analyzeSampledImageSubtractionMetrics).data.name
    msg: "makeSampledImageSubtractionMetrics.spatiallySampledMetrics != analyzeSampledImageSubtractionMetrics.data"
