description: AP Pipeline with synthetic/fake sources. Templates are inputs.
# This pipeline is imported by camera-specific pipelines.
# You almost certainly want to run one of those, and not this one.
#
# All tasks that take fake sources as input have the word "Fakes" in the label.
# This is for disambiguation and forward-compatibility with parallel tasks that
# use unmodified inputs, either here or in ap_verify.

# WARNING: some camera-specific pipelines importing this pipeline presently
# blow away all the configs that are set in this file.
# To update a pipeline config prior to DM-35504, you MUST put it in either,
# e.g., $AP_PIPE_DIR/config/$CAMERA/someTask.py, or in a camera-specific,
# pipeline, e.g., $AP_PIPE_DIR/pipelines/$CAMERA/ApPipeWithFakes.yaml.

imports:
  # The existing Fakes insertion system is not currently compatible with the
  # new CalibrateImageTask, so the fakes pipeline still is on the old tasks.
  - location: $AP_PIPE_DIR/pipelines/_ingredients/ProcessCcdCalibrate.yaml
  - location: $ANALYSIS_TOOLS_DIR/pipelines/apDetectorVisitQualityCore.yaml
parameters:
  coaddName: goodSeeing
  fakesType: 'fakes_'

tasks:
  createFakes:
    class: lsst.ap.pipe.createApFakes.CreateRandomApFakesTask
    config:
      connections.fakesType: parameters.fakesType
      magMin: 20
      magMax: 27
      fraction: 0
      fakeDensity: 5000
  coaddFakes:
    class: lsst.pipe.tasks.insertFakes.InsertFakesTask
    config:
      connections.coaddName: parameters.coaddName
      connections.fakesType: parameters.fakesType
      doSubSelectSources: True
      select_col: 'isTemplateSource'
  processVisitFakes:
    class: lsst.pipe.tasks.processCcdWithFakes.ProcessCcdWithVariableFakesTask
    config:
      connections.coaddName: parameters.coaddName
      connections.fakesType: parameters.fakesType
      insertFakes.doSubSelectSources: True
      insertFakes.select_col: 'isVisitSource'
  retrieveTemplate:
    class: lsst.ip.diffim.getTemplate.GetTemplateTask
    config:
      connections.coaddName: parameters.coaddName
      connections.fakesType: parameters.fakesType
  subtractImages:
    class: lsst.ip.diffim.subtractImages.AlardLuptonSubtractTask
    config:
      connections.coaddName: parameters.coaddName
      connections.fakesType: parameters.fakesType
  detectAndMeasure:
    class: lsst.ip.diffim.detectAndMeasure.DetectAndMeasureTask
    config:
      connections.coaddName: parameters.coaddName
      connections.fakesType: parameters.fakesType
      doSkySources: True
  filterDiaSrcCat:
    class: lsst.ap.association.FilterDiaSourceCatalogTask
    config:
      doRemoveSkySources: True
      connections.coaddName: parameters.coaddName
      connections.fakesType: parameters.fakesType
  rbClassify:
    class: lsst.meas.transiNet.RBTransiNetTask
    config:
      modelPackageStorageMode: butler
      connections.coaddName: parameters.coaddName
      connections.fakesType: parameters.fakesType
  transformDiaSrcCat:
    class: lsst.ap.association.TransformDiaSourceCatalogTask
    config:
      connections.coaddName: parameters.coaddName
      connections.fakesType: parameters.fakesType
      doRemoveSkySources: True
      doIncludeReliability: True  # Output from rbClassify
  diaPipe:
    class: lsst.ap.association.DiaPipelineTask
    config:
      doWriteAssociatedSources: True
      connections.coaddName: parameters.coaddName
      connections.fakesType: parameters.fakesType
      # apdb.db_url: YOU MUST CONFIGURE THIS BEFORE RUNNING THE PIPELINE
  fakesMatch:
    class: lsst.pipe.tasks.matchFakes.MatchVariableFakesTask
    config:
      connections.coaddName: parameters.coaddName
      connections.fakesType: parameters.fakesType
      matchDistanceArcseconds: 0.5
subsets:
  # processCcd imported unchanged from ProcessCcd.yaml
  prepareFakes:
    subset:
      - createFakes
      - coaddFakes
    description: >
      Creation of fake sources.
  apPipe:
    subset:
      - processVisitFakes
      - retrieveTemplate
      - subtractImages
      - detectAndMeasure
      - filterDiaSrcCat
      - rbClassify
      - transformDiaSrcCat
      - diaPipe
      - fakesMatch
      - analyzeAssocDiaSrcCore
      - analyzeTrailedDiaSrcCore
      - diffimTaskCore
    description: >
      The AP pipeline with fakes. Requires apPipe and prepareFakes subsets.

contracts:
  - detectAndMeasure.doSkySources == transformDiaSrcCat.doRemoveSkySources
  # Inputs and outputs must match. For consistency, contracts are written in execution order:
  #     first task == second task, then sorted by (first, second)
  # Use of ConnectionsClass for templated fields is a workaround for DM-30210
  - contract: createFakes.connections.ConnectionsClass(config=createFakes).fakeCat.name ==
              coaddFakes.connections.ConnectionsClass(config=coaddFakes).fakeCat.name
    msg: "createFakes.fakeCat != coaddFakes.fakeCat"
  - contract: createFakes.connections.ConnectionsClass(config=createFakes).fakeCat.name ==
              processVisitFakes.connections.ConnectionsClass(config=processVisitFakes).fakeCats.name
    msg: "createFakes.fakeCat != processVisitFakes.fakeCats"
  - contract: createFakes.connections.ConnectionsClass(config=createFakes).fakeCat.name ==
              fakesMatch.connections.ConnectionsClass(config=fakesMatch).fakeCats.name
    msg: "createFakes.fakeCat != fakesMatch.fakeCats"
  - contract: processVisitFakes.connections.ConnectionsClass(config=processVisitFakes).outputExposure.name ==
              subtractImages.connections.ConnectionsClass(config=subtractImages).science.name
    msg: "processVisitFakes.outputExposure != subtractImages.science"
  - contract: coaddFakes.connections.ConnectionsClass(config=coaddFakes).imageWithFakes.name ==
              retrieveTemplate.connections.ConnectionsClass(config=retrieveTemplate).coaddExposures.name
    msg: "coaddFakes.imageWithFakes != retrieveTemplate.coaddExposures"
  - contract: retrieveTemplate.connections.ConnectionsClass(config=retrieveTemplate).template.name ==
              subtractImages.connections.ConnectionsClass(config=subtractImages).template.name
    msg: "retrieveTemplate.template != subtractImages.template"
  - contract: subtractImages.connections.ConnectionsClass(config=subtractImages).difference.name ==
              detectAndMeasure.connections.ConnectionsClass(config=detectAndMeasure).difference.name
    msg: "subtractImages.difference != detectAndMeasure.difference"
  - contract: subtractImages.connections.ConnectionsClass(config=subtractImages).science.name ==
              detectAndMeasure.connections.ConnectionsClass(config=detectAndMeasure).science.name
    msg: "subtractImages.science != detectAndMeasure.science"
  - contract: subtractImages.connections.ConnectionsClass(config=subtractImages).template.name ==
              diaPipe.connections.ConnectionsClass(config=diaPipe).template.name
    msg: "subtractImages.template != diaPipe.template"
  - contract: subtractImages.connections.ConnectionsClass(config=subtractImages).science.name ==
              diaPipe.connections.ConnectionsClass(config=diaPipe).exposure.name
    msg: "subtractImages.science != diaPipe.exposure"
  - contract: detectAndMeasure.connections.ConnectionsClass(config=detectAndMeasure).diaSources.name ==
              filterDiaSrcCat.connections.ConnectionsClass(config=filterDiaSrcCat).diaSourceCat.name
    msg: "detectAndMeasure.diaSources != filterDiaSrcCat.diaSourceCat"
  - contract: detectAndMeasure.connections.ConnectionsClass(config=detectAndMeasure).subtractedMeasuredExposure.name ==
              rbClassify.connections.ConnectionsClass(config=rbClassify).difference.name
    msg: "detectAndMeasure.subtractedMeasuredExposure != rbClassify.difference"
  - contract: detectAndMeasure.connections.ConnectionsClass(config=detectAndMeasure).subtractedMeasuredExposure.name ==
              transformDiaSrcCat.connections.ConnectionsClass(config=transformDiaSrcCat).diffIm.name
    msg: "detectAndMeasure.subtractedMeasuredExposure != transformDiaSrcCat.diffIm"
  - contract: detectAndMeasure.connections.ConnectionsClass(config=detectAndMeasure).subtractedMeasuredExposure.name ==
              diaPipe.connections.ConnectionsClass(config=diaPipe).diffIm.name
    msg: "detectAndMeasure.subtractedMeasuredExposure != diaPipe.diffIm"
  - contract: detectAndMeasure.connections.ConnectionsClass(config=detectAndMeasure).subtractedMeasuredExposure.name ==
              fakesMatch.connections.ConnectionsClass(config=fakesMatch).diffIm.name
    msg: "detectAndMeasure.subtractedMeasuredExposure != fakesMatch.diffIm"
  - contract: detectAndMeasure.connections.ConnectionsClass(config=detectAndMeasure).spatiallySampledMetrics.name ==
              diffimTaskPlots.connections.ConnectionsClass(config=diffimTaskPlots).data.name
    msg: "detectAndMeasure.spatiallySampledMetrics != diffimTaskPlots.spatiallySampledMetrics"
  - contract: filterDiaSrcCat.connections.ConnectionsClass(config=filterDiaSrcCat).filteredDiaSourceCat.name ==
              rbClassify.connections.ConnectionsClass(config=rbClassify).diaSources.name
    msg: "filterDiaSrcCat.filteredDiaSourceCat != rbClassify.diaSources"
  - contract: filterDiaSrcCat.connections.ConnectionsClass(config=filterDiaSrcCat).filteredDiaSourceCat.name ==
              transformDiaSrcCat.connections.ConnectionsClass(config=transformDiaSrcCat).diaSourceCat.name
    msg: "filterDiaSrcCat.filteredDiaSourceCat != transformDiaSrcCat.diaSourceCat"
  - contract: (not transformDiaSrcCat.doIncludeReliability) or
              (rbClassify.connections.ConnectionsClass(config=rbClassify).classifications.name ==
               transformDiaSrcCat.connections.ConnectionsClass(config=transformDiaSrcCat).reliability.name)
    msg: "rbClassify.classifications != transformDiaSrcCat.reliability"
  - contract: transformDiaSrcCat.connections.ConnectionsClass(config=transformDiaSrcCat).diaSourceTable.name ==
              diaPipe.connections.ConnectionsClass(config=diaPipe).diaSourceTable.name
    msg: "transformDiaSrcCat.diaSourceTable != diaPipe.diaSourceTable"
  - contract: diaPipe.connections.ConnectionsClass(config=diaPipe).associatedDiaSources.name ==
              fakesMatch.connections.ConnectionsClass(config=fakesMatch).associatedDiaSources.name
    msg: "diaPipe.associatedDiaSources != fakesMatch.associatedDiaSources"
  - contract: diaPipe.connections.ConnectionsClass(config=diaPipe).associatedDiaSources.name ==
              analyzeAssocDiaSrcCore.connections.ConnectionsClass(config=analyzeAssocDiaSrcCore).data.name
    msg: "diaPipe.associatedDiaSources != analyzeAssocDiaSrcCore.data"
  - contract: diaPipe.connections.ConnectionsClass(config=diaPipe).longTrailedSources.name ==
              analyzeTrailedDiaSrcCore.connections.ConnectionsClass(config=analyzeTrailedDiaSrcCore).data.name
    msg: "diaPipe.longTrailedSources != analyzeTrailedDiaSrcCore.data"
