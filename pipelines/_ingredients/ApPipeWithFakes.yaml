description: AP Pipeline with synthetic/fake sources. Templates are inputs.
# This pipeline is imported by camera-specific pipelines.
# You almost certainly want to run one of those, and not this one.

# Per RFC-997, all variants of ApPipe must define three mutually exclusive subsets:
# - preload is tasks that can be run before raw images arrive
# - prompt is everything done by Prompt Processing starting from raws
# - afterburner is metrics and other non-essential tasks that are skipped by Prompt Processing

imports:
  - location: $ANALYSIS_TOOLS_DIR/pipelines/apDetectorVisitQualityCore.yaml
  - location: $ANALYSIS_TOOLS_DIR/pipelines/apDetectorVisitFakesCore.yaml

parameters:
  coaddName: goodSeeing
  # APDB config file must be user-specified
  apdb_config:
  fakesType: 'fakes_'
  injected_prefix: 'fakes_'
  injection_prefix: 'injection_'

tasks:
  isr:
    class: lsst.ip.isr.IsrTask
    config:
      connections.outputExposure: postISRCCD
      doBrighterFatter: False
  calibrateImage:
    class: lsst.pipe.tasks.calibrateImage.CalibrateImageTask
    config:
      connections.exposures: postISRCCD
      connections.initial_stars_schema: initial_stars_schema
      connections.exposure: initial_pvi
      connections.stars: initial_stars_detector
      connections.stars_footprints: initial_stars_footprints_detector
      connections.applied_photo_calib: initial_photoCalib_detector
      connections.background: initial_pvi_background
      connections.psf_stars_footprints: initial_psf_stars_footprints_detector
      connections.psf_stars: initial_psf_stars_detector
      connections.astrometry_matches: initial_astrometry_match_detector
      connections.photometry_matches: initial_photometry_match_detector
  inject_visit:
    class: lsst.source.injection.inject_visit.VisitInjectTask
    config:
      connections.input_exposure: initial_pvi
      connections.output_exposure: fakes_initial_pvi
      connections.output_catalog: fakes_initial_pvi_catalog
      connections.injection_prefix: parameters.injection_prefix
      connections.injected_prefix: parameters.injected_prefix
      external_psf: false
      external_photo_calib: false
      external_wcs: false
  loadDiaCatalogs:
    class: lsst.ap.association.LoadDiaCatalogsTask
    config:
      connections.regionTime: regionTimeInfo
      connections.diaObjects: preloaded_diaObjects
      connections.diaSources: preloaded_diaSources
      connections.diaForcedSources: preloaded_diaForcedSources
      apdb_config_url: parameters.apdb_config
  rewarpTemplate:
    class: lsst.ip.diffim.getTemplate.GetTemplateTask
    config:
      connections.coaddName: parameters.coaddName
      connections.fakesType: parameters.fakesType
      connections.bbox: initial_pvi.bbox
      connections.wcs: initial_pvi.wcs
      connections.coaddExposures: "{fakesType}{coaddName}Coadd"
      connections.template: "{fakesType}{coaddName}Diff_templateExp"
  subtractImages:
    class: lsst.ip.diffim.subtractImages.AlardLuptonSubtractTask
    config:
      connections.coaddName: parameters.coaddName
      connections.fakesType: parameters.fakesType
      connections.science: fakes_initial_pvi
      connections.sources: initial_stars_footprints_detector  # don't use the fakes for PSF-matching
      connections.template: "{fakesType}{coaddName}Diff_templateExp"
      connections.difference: "{fakesType}{coaddName}Diff_differenceTempExp"
      connections.matchedTemplate: "{fakesType}{coaddName}Diff_matchedExp"
      connections.psfMatchingKernel: "{fakesType}{coaddName}Diff_psfMatchKernel"
      connections.kernelSources: "{fakesType}{coaddName}Diff_psfMatchSources"
      doApplyExternalCalibrations: false
  detectAndMeasureDiaSource:
    class: lsst.ip.diffim.detectAndMeasure.DetectAndMeasureTask
    config:
      connections.coaddName: parameters.coaddName
      connections.fakesType: parameters.fakesType
      connections.science: fakes_initial_pvi
      connections.matchedTemplate: "{fakesType}{coaddName}Diff_matchedExp"
      connections.difference: "{fakesType}{coaddName}Diff_differenceTempExp"
      connections.outputSchema: "{fakesType}{coaddName}Diff_diaSrc_schema"
      connections.diaSources: "{fakesType}{coaddName}Diff_diaSrc"
      connections.subtractedMeasuredExposure: "{fakesType}{coaddName}Diff_differenceExp"
      connections.maskedStreaks: "{fakesType}{coaddName}Diff_streaks"
      doSkySources: true
  filterDiaSource:
    class: lsst.ap.association.FilterDiaSourceCatalogTask
    config:
      connections.coaddName: parameters.coaddName
      connections.fakesType: parameters.fakesType
      connections.diaSourceCat: "{fakesType}{coaddName}Diff_diaSrc"
      connections.filteredDiaSourceCat: "{fakesType}{coaddName}Diff_candidateDiaSrc"
      connections.rejectedDiaSources: "{fakesType}{coaddName}Diff_rejectedDiaSrc"
      connections.diffImVisitInfo: "{fakesType}{coaddName}Diff_differenceExp.visitInfo"
      connections.longTrailedSources: "{fakesType}{coaddName}Diff_longTrailedSrc"
      doRemoveSkySources: true
  computeReliability:
    class: lsst.meas.transiNet.RBTransiNetTask
    config:
      connections.coaddName: parameters.coaddName
      connections.fakesType: parameters.fakesType
      connections.science: fakes_initial_pvi
      connections.template: "{fakesType}{coaddName}Diff_templateExp"
      connections.difference: "{fakesType}{coaddName}Diff_differenceExp"
      connections.diaSources: "{fakesType}{coaddName}Diff_candidateDiaSrc"
      connections.classifications: "{fakesType}{coaddName}RealBogusSources"
      modelPackageStorageMode: butler
  standardizeDiaSource:
    class: lsst.ap.association.TransformDiaSourceCatalogTask
    config:
      connections.coaddName: parameters.coaddName
      connections.fakesType: parameters.fakesType
      connections.diaSourceSchema: "{fakesType}{coaddName}Diff_diaSrc_schema"
      connections.diaSourceCat: "{fakesType}{coaddName}Diff_candidateDiaSrc"
      connections.diffIm: "{fakesType}{coaddName}Diff_differenceExp"
      connections.reliability: "{fakesType}{coaddName}RealBogusSources"
      connections.diaSourceTable: "{fakesType}{coaddName}Diff_diaSrcTable"
      doRemoveSkySources: True
      doIncludeReliability: True  # Output from computeReliability
  getRegionTimeFromVisit:
    class: lsst.pipe.tasks.getRegionTimeFromVisit.GetRegionTimeFromVisitTask
    config:
      connections.coaddName: parameters.coaddName
      connections.fakesType: parameters.fakesType
      connections.dummy_visit: initial_stars_footprints_detector
      connections.output: regionTimeInfo
  mpSkyEphemerisQuery:
    class: lsst.ap.association.MPSkyEphemerisQueryTask
    config:
      connections.predictedRegionTime: regionTimeInfo
      connections.ssObjects: preloaded_SsObjects
  associateApdb:
    class: lsst.ap.association.DiaPipelineTask
    config:
      connections.coaddName: parameters.coaddName
      connections.fakesType: parameters.fakesType
      connections.exposure: fakes_initial_pvi
      connections.diaSourceTable: "{fakesType}{coaddName}Diff_diaSrcTable"
      connections.solarSystemObjectTable: preloaded_SsObjects
      connections.diffIm: "{fakesType}{coaddName}Diff_differenceExp"
      connections.template: "{fakesType}{coaddName}Diff_templateExp"
      connections.preloadedDiaObjects: preloaded_diaObjects
      connections.preloadedDiaSources: preloaded_diaSources
      connections.preloadedDiaForcedSources: preloaded_diaForcedSources
      connections.associatedDiaSources: "{fakesType}{coaddName}Diff_assocDiaSrc"
      connections.associatedSsSources: "{fakesType}{coaddName}Diff_associatedSsSources"
      connections.unassociatedSsObjects: ssUnassociatedObjects
      connections.diaForcedSources: "{fakesType}{coaddName}Diff_diaForcedSrc"
      connections.diaObjects: "{fakesType}{coaddName}Diff_diaObject"
      connections.newDiaSources: "{fakesType}{coaddName}Diff_newDiaSources"
      connections.marginalDiaSources: "{fakesType}{coaddName}Diff_marginalDiaSources"
      doWriteAssociatedSources: True
      doSolarSystemAssociation: False
      apdb_config_url: parameters.apdb_config
      doPackageAlerts: True  # Test alert generation, but don't output
  injectedMatchDiaSrc:
    class: lsst.ap.pipe.matchSourceInjected.MatchInjectedToDiaSourceTask
    config:
      connections.coaddName: parameters.coaddName
      connections.fakesType: parameters.fakesType
      connections.injectedCat: fakes_initial_pvi_catalog
      connections.diffIm: "{fakesType}{coaddName}Diff_differenceExp"
      connections.diaSources: "{fakesType}{coaddName}Diff_diaSrc"
      connections.matchDiaSources: "{fakesType}{coaddName}Diff_matchDiaSrc"
      matchDistanceArcseconds: 0.5
      trimBuffer: 50
  injectedMatchAssocDiaSrc:
    class: lsst.ap.pipe.matchSourceInjected.MatchInjectedToAssocDiaSourceTask
    config:
      connections.coaddName: parameters.coaddName
      connections.fakesType: parameters.fakesType
      connections.assocDiaSources: "{fakesType}{coaddName}Diff_assocDiaSrc"
      connections.matchDiaSources: "{fakesType}{coaddName}Diff_matchDiaSrc"
      connections.matchAssocDiaSources: "{fakesType}{coaddName}Diff_matchAssocDiaSrc"
  consolidateMatchDiaSrc:
    class: lsst.pipe.tasks.postprocess.ConsolidateSourceTableTask
    config:
      # Task doesn't support coaddName, so coopt catalogType instead.
      connections.catalogType: parameters.coaddName
      connections.inputCatalogs: "fakes_{catalogType}Diff_matchDiaSrc"
      connections.outputCatalog: "fakes_{catalogType}Diff_matchDiaSourceTable"
  consolidateMatchAssocDiaSrc:
    class: lsst.pipe.tasks.postprocess.ConsolidateSourceTableTask
    config:
      # Task doesn't support coaddName, so coopt catalogType instead.
      connections.catalogType: parameters.coaddName
      connections.inputCatalogs: "fakes_{catalogType}Diff_matchAssocDiaSrc"
      connections.outputCatalog: "fakes_{catalogType}Diff_matchAssocDiaSourceTable"
  makeSampledImageSubtractionMetrics:
    class: lsst.ip.diffim.SpatiallySampledMetricsTask
    config:
      connections.coaddName: parameters.coaddName
      connections.fakesType: parameters.fakesType
      connections.science: fakes_initial_pvi
      connections.matchedTemplate: "{fakesType}{coaddName}Diff_matchedExp"
      connections.template: "{fakesType}{coaddName}Diff_templateExp"
      connections.difference: "{fakesType}{coaddName}Diff_differenceExp"
      connections.diaSources: "{fakesType}{coaddName}Diff_candidateDiaSrc"
      connections.psfMatchingKernel: "{fakesType}{coaddName}Diff_psfMatchKernel"
      connections.spatiallySampledMetrics: "{fakesType}{coaddName}Diff_spatiallySampledMetrics"
subsets:
  apPipeSingleFrame:
    subset:
      - isr
      - calibrateImage
      - analyzeCalibrationMetrics
    description: >-
      The prompt ApPipe tasks that make up single-frame processing. Not to be confused with the
      SingleFrame.yaml pipeline, which does more than just ApPipe single frame processing, and
      is designed as a standalone alternative to ApPipeWithFakes.yaml.
  processCcd:  # TODO: remove on DM-48428
    subset:
      - isr
      - calibrateImage
      - analyzeCalibrationMetrics
    description: Deprecated alias for apPipeSingleFrame, will be removed after v29.
  apPipe:
    subset:
      - isr
      - calibrateImage
      - inject_visit
      - loadDiaCatalogs
      - rewarpTemplate
      - subtractImages
      - detectAndMeasureDiaSource
      - filterDiaSource
      - computeReliability
      - standardizeDiaSource
      - getRegionTimeFromVisit
      - mpSkyEphemerisQuery
      - associateApdb
      - injectedMatchDiaSrc
      - injectedMatchAssocDiaSrc
      - consolidateMatchDiaSrc
      - consolidateMatchAssocDiaSrc
      - makeSampledImageSubtractionMetrics
      - analyzeAssociatedDiaSourceTable
      - analyzeTrailedDiaSourceTable
      - analyzeDiaFakesDetectorVisitCore
      - analyzeAssocDiaFakesDetectorVisitCore
      - analyzeDiaFakesVisitCore
      - analyzeAssocDiaFakesVisitCore
      - analyzeImageDifferenceMetrics
      - analyzeDiaSourceDetectionMetrics
      - analyzeLoadDiaCatalogsMetrics
      - analyzeDiaSourceAssociationMetrics
      - analyzeAssociateDiaSourceTiming
      - analyzeSampledImageSubtractionMetrics
      - analyzeCalibrationMetrics
    description: >
      An alias of ApPipe to use in higher-level pipelines.
  preload:
    subset:
      - loadDiaCatalogs
      - analyzeLoadDiaCatalogsMetrics
      - mpSkyEphemerisQuery
    description: Tasks that can be run before receiving raw images.
  prompt:
    subset:
      - isr
      - calibrateImage
      - inject_visit
      - rewarpTemplate
      - subtractImages
      - detectAndMeasureDiaSource
      - filterDiaSource
      - computeReliability
      - standardizeDiaSource
      - associateApdb
      - injectedMatchDiaSrc
      - injectedMatchAssocDiaSrc
      - consolidateMatchDiaSrc
      - consolidateMatchAssocDiaSrc
      - analyzeAssociatedDiaSourceTable
      - analyzeTrailedDiaSourceTable
      - analyzeImageDifferenceMetrics
      - analyzeDiaSourceDetectionMetrics
      - analyzeDiaSourceAssociationMetrics
      - analyzeAssociateDiaSourceTiming
      - analyzeCalibrationMetrics
    description: >
      Tasks necessary to turn raw images into APDB rows and alerts.
      Requires preload subset to be run first.
  afterburner:
    subset:
      - makeSampledImageSubtractionMetrics
      - analyzeSampledImageSubtractionMetrics
      - analyzeDiaFakesDetectorVisitCore
      - analyzeAssocDiaFakesDetectorVisitCore
      - analyzeDiaFakesVisitCore
      - analyzeAssocDiaFakesVisitCore
    description: >
      Tasks for QA and other non-real-time processing.
      Requires prompt subset to be run first.
  injected_apPipeSingleFrame:
    subset:
    - inject_visit
    description: >-
      All tasks from the 'apPipeSingleFrame' subset impacted by source injection.
  injected_processCcd:
    subset:
    - inject_visit
    description: >
      Deprecated alias for injected_apPipeSingleFrame, will be removed after v29.
  injected_apPipe:
    subset:
    - inject_visit
    - subtractImages
    - detectAndMeasureDiaSource
    - standardizeDiaSource
    - computeReliability
    - associateApdb
    - injectedMatchDiaSrc
    - injectedMatchAssocDiaSrc
    - consolidateMatchDiaSrc
    - consolidateMatchAssocDiaSrc
    - analyzeDiaFakesDetectorVisitCore
    - analyzeAssocDiaFakesDetectorVisitCore
    - analyzeDiaFakesVisitCore
    - analyzeAssocDiaFakesVisitCore
    description: >
      All tasks from the 'apPipe' subset impacted by source injection.
contracts:
  - contract: detectAndMeasureDiaSource.doSkySources == standardizeDiaSource.doRemoveSkySources
  # Both loadDiaCatalogs and associateApdb connect to the APDB, so make sure they use the same configuration
  - loadDiaCatalogs.apdb_config_url == associateApdb.apdb_config_url
  # Inputs and outputs must match. For consistency, contracts are written in execution order:
  #     first task == second task, then sorted by (first, second)
  # Use of ConnectionsClass for templated fields is a workaround for DM-30210
  - contract: rewarpTemplate.connections.ConnectionsClass(config=rewarpTemplate).template.name ==
              subtractImages.connections.ConnectionsClass(config=subtractImages).template.name
    msg: "rewarpTemplate.template != subtractImages.template"
  - contract: rewarpTemplate.connections.ConnectionsClass(config=rewarpTemplate).template.name ==
              makeSampledImageSubtractionMetrics.connections.ConnectionsClass(config=makeSampledImageSubtractionMetrics).template.name
    msg: "rewarpTemplate.template != makeSampledImageSubtractionMetrics.template"
  - contract: subtractImages.connections.ConnectionsClass(config=subtractImages).difference.name ==
              detectAndMeasureDiaSource.connections.ConnectionsClass(config=detectAndMeasureDiaSource).difference.name
    msg: "subtractImages.difference != detectAndMeasureDiaSource.difference"
  - contract: subtractImages.connections.ConnectionsClass(config=subtractImages).science.name ==
              detectAndMeasureDiaSource.connections.ConnectionsClass(config=detectAndMeasureDiaSource).science.name
    msg: "subtractImages.science != detectAndMeasureDiaSource.science"
  - contract: subtractImages.connections.ConnectionsClass(config=subtractImages).template.name ==
              associateApdb.connections.ConnectionsClass(config=associateApdb).template.name
    msg: "subtractImages.template != associateApdb.template"
  - contract: subtractImages.connections.ConnectionsClass(config=subtractImages).science.name ==
              associateApdb.connections.ConnectionsClass(config=associateApdb).exposure.name
    msg: "subtractImages.science != associateApdb.exposure"
  - contract: subtractImages.connections.ConnectionsClass(config=subtractImages).matchedTemplate.name ==
              makeSampledImageSubtractionMetrics.connections.ConnectionsClass(config=makeSampledImageSubtractionMetrics).matchedTemplate.name
    msg: "subtractImages.matchedTemplate != makeSampledImageSubtractionMetrics.matchedTemplate"
  - contract: detectAndMeasureDiaSource.connections.ConnectionsClass(config=detectAndMeasureDiaSource).diaSources.name ==
              filterDiaSource.connections.ConnectionsClass(config=filterDiaSource).diaSourceCat.name
    msg: "detectAndMeasureDiaSource.diaSources != filterDiaSource.diaSourceCat"
  - contract: detectAndMeasureDiaSource.connections.ConnectionsClass(config=detectAndMeasureDiaSource).subtractedMeasuredExposure.name ==
              computeReliability.connections.ConnectionsClass(config=computeReliability).difference.name
    msg: "detectAndMeasureDiaSource.subtractedMeasuredExposure != computeReliability.difference"
  - contract: detectAndMeasureDiaSource.connections.ConnectionsClass(config=detectAndMeasureDiaSource).subtractedMeasuredExposure.name ==
              standardizeDiaSource.connections.ConnectionsClass(config=standardizeDiaSource).diffIm.name
    msg: "detectAndMeasureDiaSource.subtractedMeasuredExposure != standardizeDiaSource.diffIm"
  - contract: detectAndMeasureDiaSource.connections.ConnectionsClass(config=detectAndMeasureDiaSource).subtractedMeasuredExposure.name ==
              associateApdb.connections.ConnectionsClass(config=associateApdb).diffIm.name
    msg: "detectAndMeasureDiaSource.subtractedMeasuredExposure != associateApdb.diffIm"
  - contract: detectAndMeasureDiaSource.connections.ConnectionsClass(config=detectAndMeasureDiaSource).subtractedMeasuredExposure.name ==
              makeSampledImageSubtractionMetrics.connections.ConnectionsClass(config=makeSampledImageSubtractionMetrics).difference.name
    msg: "detectAndMeasureDiaSource.subtractedMeasuredExposure != makeSampledImageSubtractionMetrics.difference"
  - contract: filterDiaSource.connections.ConnectionsClass(config=filterDiaSource).filteredDiaSourceCat.name ==
              computeReliability.connections.ConnectionsClass(config=computeReliability).diaSources.name
    msg: "filterDiaSource.filteredDiaSourceCat != computeReliability.diaSources"
  - contract: filterDiaSource.connections.ConnectionsClass(config=filterDiaSource).filteredDiaSourceCat.name ==
              standardizeDiaSource.connections.ConnectionsClass(config=standardizeDiaSource).diaSourceCat.name
    msg: "filterDiaSource.filteredDiaSourceCat != standardizeDiaSource.diaSourceCat"
  - contract: filterDiaSource.connections.ConnectionsClass(config=filterDiaSource).filteredDiaSourceCat.name ==
              makeSampledImageSubtractionMetrics.connections.ConnectionsClass(config=makeSampledImageSubtractionMetrics).diaSources.name
    msg: "filterDiaSource.filteredDiaSourceCat != makeSampledImageSubtractionMetrics.diaSources"
  - contract: (not standardizeDiaSource.doIncludeReliability) or
              (computeReliability.connections.ConnectionsClass(config=computeReliability).classifications.name ==
               standardizeDiaSource.connections.ConnectionsClass(config=standardizeDiaSource).reliability.name)
    msg: "computeReliability.classifications != standardizeDiaSource.reliability"
  - contract: standardizeDiaSource.connections.ConnectionsClass(config=standardizeDiaSource).diaSourceTable.name ==
              associateApdb.connections.ConnectionsClass(config=associateApdb).diaSourceTable.name
    msg: "standardizeDiaSource.diaSourceTable != associateApdb.diaSourceTable"
  - contract: calibrateImage.connections.ConnectionsClass(config=calibrateImage).stars_footprints.name ==
              getRegionTimeFromVisit.connections.ConnectionsClass(config=getRegionTimeFromVisit).dummy_visit.name
    msg: "calibrateImage.stars_footprints != getRegionTimeFromVisit.dummy_visit"
  - contract: getRegionTimeFromVisit.connections.ConnectionsClass(config=getRegionTimeFromVisit).output.name ==
              mpSkyEphemerisQuery.connections.ConnectionsClass(config=mpSkyEphemerisQuery).predictedRegionTime.name
    msg: "mpSkyEphemerisQuery.predictedRegionTime != getRegionTimeFromVisit.output"
  - contract: (not associateApdb.doSolarSystemAssociation) or
              (mpSkyEphemerisQuery.connections.ConnectionsClass(config=mpSkyEphemerisQuery).ssObjects.name ==
              associateApdb.connections.ConnectionsClass(config=associateApdb).solarSystemObjectTable.name)
    msg: "mpSkyEphemerisQuery.ssObjects != associateApdb.solarSystemObjectTable"
  - contract: associateApdb.connections.ConnectionsClass(config=associateApdb).associatedDiaSources.name ==
              analyzeAssociatedDiaSourceTable.connections.ConnectionsClass(config=analyzeAssociatedDiaSourceTable).data.name
    msg: "associateApdb.associatedDiaSources != analyzeAssociatedDiaSourceTable.data"
  - contract: filterDiaSource.connections.ConnectionsClass(config=filterDiaSource).longTrailedSources.name ==
              analyzeTrailedDiaSourceTable.connections.ConnectionsClass(config=analyzeTrailedDiaSourceTable).data.name
    msg: "associateApdb.longTrailedSources != analyzeTrailedDiaSourceTable.data"
  - contract: makeSampledImageSubtractionMetrics.connections.ConnectionsClass(config=makeSampledImageSubtractionMetrics).spatiallySampledMetrics.name ==
              analyzeSampledImageSubtractionMetrics.connections.ConnectionsClass(config=analyzeSampledImageSubtractionMetrics).data.name
    msg: "makeSampledImageSubtractionMetrics.spatiallySampledMetrics != analyzeSampledImageSubtractionMetrics.data"
