description: DECam AP Pipeline with synthetic/fake sources. Templates are inputs.
# Remember:
# (0) Ensure median calibration products and template coadds exist for the data being processed
# (1) Run $AP_PIPE_DIR/pipelines/DECam/RunIsrForCrosstalkSources.yaml
# (2) Execute `apdb-cli create-sql`, e.g.,
#     apdb-cli create-sql "sqlite:////project/user/association.db" apdb_config.py
# (3) Run this pipeline, setting the apdb_config parameter to point to the new file

instrument: lsst.obs.decam.DarkEnergyCamera
imports:
  - location: $AP_PIPE_DIR/pipelines/DECam/ProcessCcd.yaml
  - location: $AP_PIPE_DIR/pipelines/_ingredients/ApPipeWithFakes.yaml
    exclude:  # These tasks come from DECam/ProcessCcd.yaml instead
      - processCcd

parameters:
  apdb_config:  # YOU MUST CONFIGURE THIS BEFORE RUNNING THE PIPELINE
  coaddName: goodSeeing
  fakesType: 'fakes_'
  injected_prefix: "fakes_"
  injection_prefix: "injection_"
subsets:
# apPipe must be redefined from $AP_PIPE_DIR/pipelines/_ingredients/ApPipeWithFakes.yaml
# because its processCcd was excluded.
  apPipe:
    subset:
      - inject_visit
      - loadDiaCatalogs
      - isr
      - calibrateImage
      - retrieveTemplate
      - subtractImages
      - detectAndMeasure
      - filterDiaSrcCat
      - rbClassify
      - transformDiaSrcCat
      - getRegionTimeFromVisit
      - diaPipe
      - sampleSpatialMetrics
      - analyzeAssocDiaSrcCore
      - analyzeTrailedDiaSrcCore
      - diffimTaskCore
      - diffimTaskPlots
      - initialPviCore
    description: >
      An alias of ApPipe to use in higher-level pipelines.
