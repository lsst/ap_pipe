# UPDATE THIS to the path to the pipeline to run
pipelineYaml: '${AP_PIPE_DIR}/pipelines/ApPipe.yaml'

# Format for job names and job output filenames
templateDataId: '{tract}_{patch}_{band}_{visit}_{exposure}_{detector}'

# Just names, but UPDATE THIS AND KEEP THEM SHORT
project: ApPipe
campaign: DM-xxxxx

submitPath: ${PWD}/bps/{outputRun}
computeSite: ncsapool
# The default BPS walltime is on the order of 3 days.
# That's much more than the vast majority of jobs need,
# and it can cause your jobs not to run if you're too close to a maintenance window.
# Set the default walltime as appropriate for what you are running (12 hours below).
site:
  ncsapool:
    profile:
      condor:
        +Walltime: 43200

# Memory allocated for each quantum, in MBs; can be overridden on a per-task basis.
# The bps default is 2048 MB, the same as this example, but it's kept here as a reminder.
requestMemory: 2048

# Example arguments, like the ones you would send to pipetask run from the command line
payload:
  # UPDATE THIS to also set the output collection name
  payloadName: DM-XXXXX_ApPipe_example
  # UPDATE THIS to point to the correct repository
  butlerConfig: /repo/main/butler.yaml
  # UPDATE THIS and be sure it includes collections with raws, calibs, refcats, skymaps, and templates
  # The operator variable is used at facilities beyond bps and it defaults to the value of USER.
  inCollection: HSC/defaults,'u/{operator}/templates'
  # UPDATE THIS as it is the place you want to store output.
  output: 'u/{operator}/{payloadName}'
  outputRun: '{output}/{timestamp}'
  # UPDATE THIS to specify what data to process
  dataQuery: 'exposure IN (11690, 11692) AND detector in (49, 50)'

# Various things for bps to customize about each pipeline task
pipetask:
  # Option to list other pipeline tasks being run here with default overrides
  makeWarp:
    requestMemory: 8192
  imageDifference:
    requestMemory: 4096

# Extra options for qgraph generation; will skip existing quanta in the output collection
# Note that --skip-existing-in will not work the first time you run a workflow.
extraQgraphOptions: "--skip-existing-in {output}"
